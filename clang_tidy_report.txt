/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:5:29: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
    5 | void split(std::string_view s, std::vector<std::string>& tokens, std::string_view delim) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:16:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   16 | std::string getCurrentTime(const std::string& fmt) {
      | ~~~~~~~~~~~ ^
      | auto                                               -> std::string
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:19:5: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
   19 |     char buf[64];
      |     ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:19:14: warning: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   19 |     char buf[64];
      |              ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:20:9: warning: implicit conversion 'size_t' (aka 'unsigned long') -> 'bool' [readability-implicit-bool-conversion]
   20 |     if (std::strftime(buf, sizeof(buf), fmt.c_str(), std::localtime(&in_time_t))) {
      |         ^                                                                       
      |                                                                                  != 0u
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:26:13: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   26 | std::string trimSpace(std::string_view str) {
      | ~~~~~~~~~~~ ^
      | auto                                        -> std::string
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:28:41: warning: statement should be inside braces [readability-braces-around-statements]
   28 |     if (first == std::string_view::npos) return "";
      |                                         ^          
      |                                          {
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:33:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   33 | std::vector<std::string> split(std::string_view s, char delimiter) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~ ^
      | auto                                                               -> std::vector<std::string>
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:33:49: warning: parameter name 's' is too short, expected at least 3 characters [readability-identifier-length]
   33 | std::vector<std::string> split(std::string_view s, char delimiter) {
      |                                                 ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:35:84: warning: parameter name 'r' is too short, expected at least 3 characters [readability-identifier-length]
   35 |     auto view = s | std::views::split(delimiter) | std::views::transform([](auto&& r) {
      |                                                                                    ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:65:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   65 |     std::cout << "=================================================================================" << std::endl;
      |                                                                                                         ^~~~~~~~~
      |                                                                                                         '\n'
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:66:72: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   66 |     std::cout << "FastQTools - A toolkit for FASTQ file processing" << std::endl;
      |                                                                        ^~~~~~~~~
      |                                                                        '\n'
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:67:42: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   67 |     std::cout << "Version: " << "dev" << std::endl;
      |                                          ^~~~~~~~~
      |                                          '\n'
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:68:105: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   68 |     std::cout << "=================================================================================" << std::endl;
      |                                                                                                         ^~~~~~~~~
      |                                                                                                         '\n'
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:82:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   82 | std::shared_ptr<spdlog::logger> getLogger() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      | auto                                        -> std::shared_ptr<spdlog::logger>
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:96:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   96 | int EncoderContext::getCompressionParam() const {
      | ~~~                 ^
      | auto                                            -> int
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:99:48: warning: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   99 |         case CompressionLevel::Default: return 6;
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:100:48: warning: 9 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  100 |         case CompressionLevel::High:    return 9;
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:101:48: warning: 6 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  101 |         default:                        return 6;
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:105:53: warning: 1024 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  105 | IDCompressor::IDCompressor() { m_dictionary.reserve(1024); m_last_parts.reserve(16); }
      |                                                     ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:105:81: warning: 16 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  105 | IDCompressor::IDCompressor() { m_dictionary.reserve(1024); m_last_parts.reserve(16); }
      |                                                                                 ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:117:17: warning: use '= default' to define a trivial default constructor [modernize-use-equals-default]
  117 | QualCompressor::QualCompressor() {}
      |                 ^                ~~
      |                                  = default;
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:134:27: warning: 2 adjacent parameters of 'run' of similar type ('const std::vector<char> &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  134 | void EncoderPipeline::run(const std::vector<char>& id_data, const std::vector<char>& qual_data) {
      |                           ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:134:52: note: the first parameter in the range is 'id_data'
  134 | void EncoderPipeline::run(const std::vector<char>& id_data, const std::vector<char>& qual_data) {
      |                                                    ^~~~~~~
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:134:86: note: the last parameter in the range is 'qual_data'
  134 | void EncoderPipeline::run(const std::vector<char>& id_data, const std::vector<char>& qual_data) {
      |                                                                                      ^~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:139:43: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  139 | const std::vector<char>& EncoderPipeline::getCompressedIDData() const { return m_compressed_id_data; }
      | ~~~~~~~~~~~~~~~~~~~~~~~~                  ^
      | auto                                                                  -> const std::vector<char>&
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:140:43: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 | const std::vector<char>& EncoderPipeline::getCompressedQualData() const { return m_compressed_qual_data; }
      | ~~~~~~~~~~~~~~~~~~~~~~~~                  ^
      | auto                                                                    -> const std::vector<char>&
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:148:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  148 | const FqFileAttribution& FastQInfer::getFqFileAttribution() const { return m_fqfile_attribution; }
      | ~~~~~~~~~~~~~~~~~~~~~~~~             ^
      | auto                                                              -> const FqFileAttribution&
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:154:26: warning: pass by value and use std::move [modernize-pass-by-value]
    2 | FastQReader::FastQReader(const std::string& file_name, std::shared_ptr<FastQInfer> fq_infer, bool enable_validation)
      |                          ^~~~~~~~~~~~~~~~~~
      |                          std::string 
    3 |     : m_file_name1(file_name), m_fq_infer(fq_infer), m_validation_enabled(enable_validation) {
      |                             
      |                    std::move( )
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:154:56: warning: pass by value and use std::move [modernize-pass-by-value]
  154 | FastQReader::FastQReader(const std::string& file_name, std::shared_ptr<FastQInfer> fq_infer, bool enable_validation)
      |                                                        ^
  155 |     : m_file_name1(file_name), m_fq_infer(fq_infer), m_validation_enabled(enable_validation) {
      |                                                   
      |                                           std::move( )
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:155:43: warning: parameter 'fq_infer' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    2 |     : m_file_name1(file_name), m_fq_infer(fq_infer), m_validation_enabled(enable_validation) {
      |                                           ^       
      |                                           std::move( )
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:159:26: warning: pass by value and use std::move [modernize-pass-by-value]
  159 | FastQReader::FastQReader(const std::string& file_name1, const std::string& file_name2, std::shared_ptr<FastQInfer> fq_infer, bool enable_validation)
      |                          ^~~~~~~~~~~~~~~~~~
      |                          std::string 
  160 |     : m_file_name1(file_name1), m_file_name2(file_name2), m_fq_infer(fq_infer), m_validation_enabled(enable_validation) {
      |                              
      |                    std::move()
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:159:57: warning: pass by value and use std::move [modernize-pass-by-value]
  159 | FastQReader::FastQReader(const std::string& file_name1, const std::string& file_name2, std::shared_ptr<FastQInfer> fq_infer, bool enable_validation)
      |                                                         ^~~~~~~~~~~~~~~~~~
      |                                                         std::string 
  160 |     : m_file_name1(file_name1), m_file_name2(file_name2), m_fq_infer(fq_infer), m_validation_enabled(enable_validation) {
      |                                                        
      |                                              std::move()
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:159:88: warning: pass by value and use std::move [modernize-pass-by-value]
  159 | FastQReader::FastQReader(const std::string& file_name1, const std::string& file_name2, std::shared_ptr<FastQInfer> fq_infer, bool enable_validation)
      |                                                                                        ^
  160 |     : m_file_name1(file_name1), m_file_name2(file_name2), m_fq_infer(fq_infer), m_validation_enabled(enable_validation) {
      |                                                                              
      |                                                                      std::move( )
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:160:70: warning: parameter 'fq_infer' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
  160 |     : m_file_name1(file_name1), m_file_name2(file_name2), m_fq_infer(fq_infer), m_validation_enabled(enable_validation) {
      |                                                                      ^       
      |                                                                      std::move( )
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:168:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  168 | bool FastQReader::read(FqInfoBatch& batch, int batch_size) {
      | ~~~~              ^
      | auto                                                       -> bool
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:168:19: warning: method 'read' can be made static [readability-convert-member-functions-to-static]
  168 | bool FastQReader::read(FqInfoBatch& batch, int batch_size) {
      |                   ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:173:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  173 | bool FastQReader::isOpened() { return m_stream1 != nullptr; }
      | ~~~~              ^
      | auto                         -> bool
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:175:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  175 | bool FastQReader::eof() const { 
      | ~~~~              ^
      | auto                          -> bool
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:179:23: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  179 | uint32_t FastQReader::getReadLen() const { return 0; }
      |                       ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:179:23: warning: method 'getReadLen' can be made static [readability-convert-member-functions-to-static]
  179 | uint32_t FastQReader::getReadLen() const { return 0; }
      |                       ^            ~~~~~
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:181:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  181 | QScoreType FastQReader::getQualitySystem() const { return QScoreType::Unknown; }
      |                         ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:181:25: warning: method 'getQualitySystem' can be made static [readability-convert-member-functions-to-static]
  181 | QScoreType FastQReader::getQualitySystem() const { return QScoreType::Unknown; }
      |                         ^                  ~~~~~
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:183:19: warning: method 'openFile' can be made static [readability-convert-member-functions-to-static]
  183 | void FastQReader::openFile(const std::string& file_name, std::unique_ptr<igzstream>& stream_ptr) {
      |                   ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:187:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  187 | FQReadState FastQReader::getNextRecord(FqInfo& record, igzstream& stream) {
      | ~~~~~~~~~~~              ^
      | auto                                                                      -> FQReadState
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:187:26: warning: method 'getNextRecord' can be made static [readability-convert-member-functions-to-static]
  187 | FQReadState FastQReader::getNextRecord(FqInfo& record, igzstream& stream) {
      |                          ^
/home/shane/dev/bgi/fastqtools/src/Core/Core.cpp:201:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  201 | bool FastQWriter::isOpened() { return m_stream != nullptr; }
      | ~~~~              ^
      | auto                         -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/IReadProcessor.cpp:8:35: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    8 | std::string ProcessingStatistics::toString() const {
      | ~~~~~~~~~~~                       ^
      | auto                                               -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:18:56: warning: 93.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   18 |     if (quality_threshold < 0.0 || quality_threshold > 93.0) {
      |                                                        ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:22:29: warning: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   22 |     if (quality_encoding != 33 && quality_encoding != 64) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:22:55: warning: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   22 |     if (quality_encoding != 33 && quality_encoding != 64) {
      |                                                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:30:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   30 | bool QualityTrimmer::process(fq::fastq::FqInfo& read) {
      | ~~~~                 ^
      | auto                                                  -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:76:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   76 | std::string QualityTrimmer::getName() const {
      |                             ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:76:29: warning: method 'getName' can be made static [readability-convert-member-functions-to-static]
   76 | std::string QualityTrimmer::getName() const {
      |                             ^         ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:80:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   80 | std::string QualityTrimmer::getDescription() const {
      | ~~~~~~~~~~~                 ^
      | auto                                               -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:105:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  105 | size_t QualityTrimmer::trimFivePrime(const std::string& sequence, const std::string& quality) const {
      | ~~~~~~                 ^
      | auto                                                                                                -> size_t
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:105:38: warning: 2 adjacent parameters of 'trimFivePrime' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  105 | size_t QualityTrimmer::trimFivePrime(const std::string& sequence, const std::string& quality) const {
      |                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:105:57: note: the first parameter in the range is 'sequence'
  105 | size_t QualityTrimmer::trimFivePrime(const std::string& sequence, const std::string& quality) const {
      |                                                         ^~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:105:86: note: the last parameter in the range is 'quality'
  105 | size_t QualityTrimmer::trimFivePrime(const std::string& sequence, const std::string& quality) const {
      |                                                                                      ^~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:114:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  114 | size_t QualityTrimmer::trimThreePrime(const std::string& sequence, const std::string& quality) const {
      | ~~~~~~                 ^
      | auto                                                                                                 -> size_t
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:114:39: warning: 2 adjacent parameters of 'trimThreePrime' of similar type ('const std::string &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  114 | size_t QualityTrimmer::trimThreePrime(const std::string& sequence, const std::string& quality) const {
      |                                       ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:114:58: note: the first parameter in the range is 'sequence'
  114 | size_t QualityTrimmer::trimThreePrime(const std::string& sequence, const std::string& quality) const {
      |                                                          ^~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:114:87: note: the last parameter in the range is 'quality'
  114 | size_t QualityTrimmer::trimThreePrime(const std::string& sequence, const std::string& quality) const {
      |                                                                                       ^~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:123:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  123 | bool QualityTrimmer::isHighQuality(char quality_char) const {
      | ~~~~                 ^
      | auto                                                        -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:124:5: warning: use auto when initializing with a cast to avoid duplicating the type name [modernize-use-auto]
  124 |     double quality_score = static_cast<double>(static_cast<unsigned char>(quality_char) - m_quality_encoding);
      |     ^~~~~~
      |     auto
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:140:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 | bool LengthTrimmer::process(fq::fastq::FqInfo& read) {
      | ~~~~                ^
      | auto                                                 -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:152:9: warning: switch has 2 consecutive identical branches [bugprone-branch-clone]
  152 |         case TrimStrategy::FixedLength:
      |         ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:162:18: note: last of these clones ends here
  162 |             break;
      |                  ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:193:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  193 | std::string LengthTrimmer::getName() const {
      |                            ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:193:28: warning: method 'getName' can be made static [readability-convert-member-functions-to-static]
  193 | std::string LengthTrimmer::getName() const {
      |                            ^         ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:197:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  197 | std::string LengthTrimmer::getDescription() const {
      | ~~~~~~~~~~~                ^
      | auto                                              -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:245:22: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  245 | bool AdapterTrimmer::process(fq::fastq::FqInfo& read) {
      | ~~~~                 ^
      | auto                                                  -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:280:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  280 | std::string AdapterTrimmer::getName() const {
      |                             ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:280:29: warning: method 'getName' can be made static [readability-convert-member-functions-to-static]
  280 | std::string AdapterTrimmer::getName() const {
      |                             ^         ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:284:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  284 | std::string AdapterTrimmer::getDescription() const {
      | ~~~~~~~~~~~                 ^
      | auto                                               -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:297:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  297 | size_t AdapterTrimmer::findAdapter(const std::string& sequence, const std::string& adapter) const {
      | ~~~~~~                 ^
      | auto                                                                                              -> size_t
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:323:24: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  323 | size_t AdapterTrimmer::countMismatches(const std::string& seq1, const std::string& seq2,
      |                        ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:323:24: warning: method 'countMismatches' can be made static [readability-convert-member-functions-to-static]
  323 | size_t AdapterTrimmer::countMismatches(const std::string& seq1, const std::string& seq2,
      |                        ^
  324 |                                       size_t start1, size_t start2, size_t length) const {
      |                                                                                    ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:324:54: warning: 2 adjacent parameters of 'countMismatches' of similar type ('size_t') are easily swapped by mistake [bugprone-easily-swappable-parameters]
  324 |                                       size_t start1, size_t start2, size_t length) const {
      |                                                      ^~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:324:61: note: the first parameter in the range is 'start2'
  324 |                                       size_t start1, size_t start2, size_t length) const {
      |                                                             ^~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:324:76: note: the last parameter in the range is 'length'
  324 |                                       size_t start1, size_t start2, size_t length) const {
      |                                                                            ^~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:332:14: warning: variable name 'c1' is too short, expected at least 3 characters [readability-identifier-length]
  332 |         char c1 = std::toupper(seq1[start1 + i]);
      |              ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:332:19: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]
  332 |         char c1 = std::toupper(seq1[start1 + i]);
      |                   ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:333:14: warning: variable name 'c2' is too short, expected at least 3 characters [readability-identifier-length]
  333 |         char c2 = std::toupper(seq2[start2 + i]);
      |              ^
/home/shane/dev/bgi/fastqtools/src/Processing/Mutators/QualityTrimmer.cpp:333:19: warning: narrowing conversion from 'int' to signed type 'char' is implementation-defined [bugprone-narrowing-conversions]
  333 |         char c2 = std::toupper(seq2[start2 + i]);
      |                   ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:14:44: warning: 93.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   14 |     if (min_quality < 0.0 || min_quality > 93.0) {
      |                                            ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:18:29: warning: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   18 |     if (quality_encoding != 33 && quality_encoding != 64) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:18:55: warning: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   18 |     if (quality_encoding != 33 && quality_encoding != 64) {
      |                                                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:26:27: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   26 | bool MinQualityPredicate::evaluate(const fq::fastq::FqInfo& read) const {
      | ~~~~                      ^
      | auto                                                                    -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:45:34: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   45 | std::string MinQualityPredicate::getName() const {
      |                                  ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:45:34: warning: method 'getName' can be made static [readability-convert-member-functions-to-static]
   45 | std::string MinQualityPredicate::getName() const {
      |                                  ^         ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:49:34: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   49 | std::string MinQualityPredicate::getDescription() const {
      | ~~~~~~~~~~~                      ^
      | auto                                                    -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:55:34: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   55 | std::string MinQualityPredicate::getStatistics() const {
      | ~~~~~~~~~~~                      ^
      | auto                                                   -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:65:58: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
   65 |         double pass_rate = static_cast<double>(passed) / total * 100.0;
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:66:43: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
   66 |         double avg_quality = total_qual / total;
      |                                           ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:73:29: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   73 | double MinQualityPredicate::calculateAverageQuality(const std::string& quality_string) const {
      | ~~~~~~                      ^
      | auto                                                                                         -> double
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:79:15: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
   79 |     for (char c : quality_string) {
      |               ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:83:18: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
   83 |     return sum / quality_string.length();
      |                  ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:93:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   93 | bool MinLengthPredicate::evaluate(const fq::fastq::FqInfo& read) const {
      | ~~~~                     ^
      | auto                                                                   -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:105:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  105 | std::string MinLengthPredicate::getName() const {
      |                                 ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:105:33: warning: method 'getName' can be made static [readability-convert-member-functions-to-static]
  105 | std::string MinLengthPredicate::getName() const {
      |                                 ^         ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:109:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  109 | std::string MinLengthPredicate::getDescription() const {
      | ~~~~~~~~~~~                     ^
      | auto                                                   -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:115:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  115 | std::string MinLengthPredicate::getStatistics() const {
      | ~~~~~~~~~~~                     ^
      | auto                                                  -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:125:58: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  125 |         double pass_rate = static_cast<double>(passed) / total * 100.0;
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:126:62: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  126 |         double avg_length = static_cast<double>(total_len) / total;
      |                                                              ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:140:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 | bool MaxLengthPredicate::evaluate(const fq::fastq::FqInfo& read) const {
      | ~~~~                     ^
      | auto                                                                   -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:151:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  151 | std::string MaxLengthPredicate::getName() const {
      |                                 ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:151:33: warning: method 'getName' can be made static [readability-convert-member-functions-to-static]
  151 | std::string MaxLengthPredicate::getName() const {
      |                                 ^         ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:155:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  155 | std::string MaxLengthPredicate::getDescription() const {
      | ~~~~~~~~~~~                     ^
      | auto                                                   -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:161:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  161 | std::string MaxLengthPredicate::getStatistics() const {
      | ~~~~~~~~~~~                     ^
      | auto                                                  -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:170:58: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  170 |         double pass_rate = static_cast<double>(passed) / total * 100.0;
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:188:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  188 | bool MaxNRatioPredicate::evaluate(const fq::fastq::FqInfo& read) const {
      | ~~~~                     ^
      | auto                                                                   -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:206:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  206 | std::string MaxNRatioPredicate::getName() const {
      |                                 ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:206:33: warning: method 'getName' can be made static [readability-convert-member-functions-to-static]
  206 | std::string MaxNRatioPredicate::getName() const {
      |                                 ^         ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:210:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  210 | std::string MaxNRatioPredicate::getDescription() const {
      | ~~~~~~~~~~~                     ^
      | auto                                                   -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:217:33: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  217 | std::string MaxNRatioPredicate::getStatistics() const {
      | ~~~~~~~~~~~                     ^
      | auto                                                  -> std::string
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:227:58: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  227 |         double pass_rate = static_cast<double>(passed) / total * 100.0;
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:228:46: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  228 |         double avg_n_ratio = total_n_ratio / total * 100.0;
      |                                              ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:235:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  235 | double MaxNRatioPredicate::calculateNRatio(const std::string& sequence) const {
      |                            ^
note: this fix will not be applied because it overlaps with another fix
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:235:28: warning: method 'calculateNRatio' can be made static [readability-convert-member-functions-to-static]
  235 | double MaxNRatioPredicate::calculateNRatio(const std::string& sequence) const {
      |                            ^                                            ~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:241:43: warning: parameter name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  241 |                                   [](char c) { return c == 'N' || c == 'n'; });
      |                                           ^
/home/shane/dev/bgi/fastqtools/src/Processing/Predicates/MinQualityPredicate.cpp:243:43: warning: narrowing conversion from 'size_type' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  243 |     return static_cast<double>(n_count) / sequence.length();
      |                                           ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:20:42: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   20 | ProcessingStatistics ProcessingPipeline::run() {
      | ~~~~~~~~~~~~~~~~~~~~                     ^
      | auto                                           -> ProcessingStatistics
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:24:7: warning: do not use 'else' after 'return' [readability-else-after-return]
   24 |     } else {
      |       ^~~~~~
   25 |         return processSequential();
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~~~
   26 |     }
      |     ~
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:29:42: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   29 | ProcessingStatistics ProcessingPipeline::processSequential() {
      | ~~~~~~~~~~~~~~~~~~~~                     ^
      | auto                                                         -> ProcessingStatistics
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:34:28: warning: statement should be inside braces [readability-braces-around-statements]
   34 |     if (!reader.isOpened()) throw fq::exception("Failed to open input file: " + m_input_path);
      |                            ^                                                                  
      |                             {
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:35:28: warning: statement should be inside braces [readability-braces-around-statements]
   35 |     if (!writer.isOpened()) throw fq::exception("Failed to open output file: " + m_output_path);
      |                            ^                                                                    
      |                             {
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:38:31: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
   38 |     while (reader.read(batch, m_config.batch_size)) {
      |                               ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:45:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   45 | bool ProcessingPipeline::processBatch(fq::fastq::FqInfoBatch& batch, ProcessingStatistics& stats) {
      | ~~~~                     ^
      | auto                                                                                              -> bool
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:71:42: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   71 | ProcessingStatistics ProcessingPipeline::processWithTBB() {
      | ~~~~~~~~~~~~~~~~~~~~                     ^
      | auto                                                      -> ProcessingStatistics
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:71:42: warning: function 'processWithTBB' has cognitive complexity of 37 (threshold 25) [readability-function-cognitive-complexity]
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:93:17: note: nesting level increased to 1
   93 |                 [&](tbb::flow_control& fc) -> std::unique_ptr<fq::fastq::FqInfoBatch> {
      |                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:99:25: note: +2, including nesting penalty of 1, nesting level increased to 2
   99 |                         if (!reader) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:101:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  101 |                             if (!reader->isOpened()) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:106:25: note: +2, including nesting penalty of 1, nesting level increased to 2
  106 |                         if (reader->read(*batch, m_config.batch_size)) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:110:27: note: +1, nesting level increased to 2
  110 |                         } else {
      |                           ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:115:23: note: +2, including nesting penalty of 1, nesting level increased to 2
  115 |                     } catch (const std::exception& e) {
      |                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:126:17: note: nesting level increased to 1
  126 |                 [&](std::unique_ptr<fq::fastq::FqInfoBatch> batch) -> std::pair<std::unique_ptr<fq::fastq::FqInfoBatch>, ProcessingStatistics> {
      |                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:134:25: note: +2, including nesting penalty of 1, nesting level increased to 2
  134 |                         for (auto& read : batch->reads) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:139:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  139 |                             for (const auto& predicate : m_predicates) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:140:33: note: +4, including nesting penalty of 3, nesting level increased to 4
  140 |                                 if (!predicate->evaluate(read)) {
      |                                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:147:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  147 |                             if (passed) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:148:33: note: +4, including nesting penalty of 3, nesting level increased to 4
  148 |                                 for (const auto& mutator : m_mutators) {
      |                                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:159:23: note: +2, including nesting penalty of 1, nesting level increased to 2
  159 |                     } catch (const std::exception& e) {
      |                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:169:17: note: nesting level increased to 1
  169 |                 [&](const std::pair<std::unique_ptr<fq::fastq::FqInfoBatch>, ProcessingStatistics>& result) {
      |                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:176:25: note: +2, including nesting penalty of 1, nesting level increased to 2
  176 |                         if (!writer) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:178:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  178 |                             if (!writer->isOpened()) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:190:23: note: +2, including nesting penalty of 1, nesting level increased to 2
  190 |                     } catch (const std::exception& e) {
      |                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:208:65: note: +1, including nesting penalty of 0, nesting level increased to 1
  208 |         spdlog::info("  Throughput: {} reads/sec", duration > 0 ? reads_processed.load() / duration : 0);
      |                                                                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:210:7: note: +1, including nesting penalty of 0, nesting level increased to 1
  210 |     } catch (const std::exception& e) {
      |       ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:93:40: warning: parameter name 'fc' is too short, expected at least 3 characters [readability-identifier-length]
   93 |                 [&](tbb::flow_control& fc) -> std::unique_ptr<fq::fastq::FqInfoBatch> {
      |                                        ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:106:50: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
  106 |                         if (reader->read(*batch, m_config.batch_size)) {
      |                                                  ^
/home/shane/dev/bgi/fastqtools/src/Processing/ProcessingPipeline.cpp:110:27: warning: do not use 'else' after 'return' [readability-else-after-return]
  110 |                         } else {
      |                           ^~~~~~
  111 |                             // 文件读取完成，停止流水线
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~
  112 |                             fc.stop();
      |                             ~~~~~~~~~~
  113 |                             return nullptr;
      |                             ~~~~~~~~~~~~~~~
  114 |                         }
      |                         ~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:17:5: warning: pass by value and use std::move [modernize-pass-by-value]
    8 | 
    9 | namespace fq::processing {
   10 | 
   11 | //==============================================================================
   12 | // TbbProcessingPipeline Implementation
   13 | //==============================================================================
   14 | 
   15 | TbbProcessingPipeline::TbbProcessingPipeline(
   16 |     const Config& config,
   17 |     std::shared_ptr<fq::memory::BatchMemoryManager> memory_manager
      |     ^
   18 | ) : m_pipeline_config(config), m_memory_manager(memory_manager) {
      |                                                               
      |                                                 std::move(    )
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:18:49: warning: parameter 'memory_manager' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    8 | 
    9 | namespace fq::processing {
   10 | 
   11 | //==============================================================================
   12 | // TbbProcessingPipeline Implementation
   13 | //==============================================================================
   14 | 
   15 | TbbProcessingPipeline::TbbProcessingPipeline(
   16 |     const Config& config,
   17 |     std::shared_ptr<fq::memory::BatchMemoryManager> memory_manager
   18 | ) : m_pipeline_config(config), m_memory_manager(memory_manager) {
      |                                                 ^             
      |                                                 std::move(    )
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:58:45: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   58 | ProcessingStatistics TbbProcessingPipeline::run() {
      | ~~~~~~~~~~~~~~~~~~~~                        ^
      | auto                                              -> ProcessingStatistics
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:58:45: warning: function 'run' has cognitive complexity of 41 (threshold 25) [readability-function-cognitive-complexity]
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:63:9: note: +1, including nesting penalty of 0, nesting level increased to 1
   63 |         if (m_input_path.empty()) {
      |         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:66:9: note: +1, including nesting penalty of 0, nesting level increased to 1
   66 |         if (m_output_path.empty()) {
      |         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:75:77: note: +1, including nesting penalty of 0, nesting level increased to 1
   75 |         spdlog::info("Thread count: {}", m_pipeline_config.thread_count > 0 ? 
      |                                                                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:87:73: note: +1, including nesting penalty of 0, nesting level increased to 1
   87 |         size_t actual_thread_count = m_pipeline_config.thread_count > 0 ? 
      |                                                                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:100:17: note: nesting level increased to 1
  100 |                 [this, &total_reads_processed](tbb::flow_control& fc) -> std::unique_ptr<fq::fastq::FqInfoBatch> {
      |                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:110:25: note: +2, including nesting penalty of 1, nesting level increased to 2
  110 |                         if (!reader) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:112:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  112 |                             if (!reader->isOpened()) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:118:25: note: +2, including nesting penalty of 1, nesting level increased to 2
  118 |                         if (reader->read(*batch, m_pipeline_config.batch_size)) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:126:27: note: +1, nesting level increased to 2
  126 |                         } else {
      |                           ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:132:23: note: +2, including nesting penalty of 1, nesting level increased to 2
  132 |                     } catch (const std::exception& e) {
      |                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:143:17: note: nesting level increased to 1
  143 |                 [this, &total_reads_passed](std::unique_ptr<fq::fastq::FqInfoBatch> batch) -> std::pair<std::unique_ptr<fq::fastq::FqInfoBatch>, ProcessingStatistics> {
      |                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:153:25: note: +2, including nesting penalty of 1, nesting level increased to 2
  153 |                         for (auto& read : batch->reads) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:158:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  158 |                             for (const auto& predicate : m_predicates) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:159:33: note: +4, including nesting penalty of 3, nesting level increased to 4
  159 |                                 if (!predicate->evaluate(read)) {
      |                                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:167:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  167 |                             if (passed) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:168:33: note: +4, including nesting penalty of 3, nesting level increased to 4
  168 |                                 for (const auto& mutator : m_mutators) {
      |                                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:188:23: note: +2, including nesting penalty of 1, nesting level increased to 2
  188 |                     } catch (const std::exception& e) {
      |                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:198:17: note: nesting level increased to 1
  198 |                 [this, &final_stats](std::pair<std::unique_ptr<fq::fastq::FqInfoBatch>, ProcessingStatistics>&& result) {
      |                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:207:25: note: +2, including nesting penalty of 1, nesting level increased to 2
  207 |                         if (!writer) {
      |                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:209:29: note: +3, including nesting penalty of 2, nesting level increased to 3
  209 |                             if (!writer->isOpened()) {
      |                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:231:23: note: +2, including nesting penalty of 1, nesting level increased to 2
  231 |                     } catch (const std::exception& e) {
      |                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:248:9: note: +1, including nesting penalty of 0, nesting level increased to 1
  248 |         if (total_duration > 0) {
      |         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:263:7: note: +1, including nesting penalty of 0, nesting level increased to 1
  263 |     } catch (const std::exception& e) {
      |       ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:100:67: warning: parameter name 'fc' is too short, expected at least 3 characters [readability-identifier-length]
  100 |                 [this, &total_reads_processed](tbb::flow_control& fc) -> std::unique_ptr<fq::fastq::FqInfoBatch> {
      |                                                                   ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:118:50: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
  118 |                         if (reader->read(*batch, m_pipeline_config.batch_size)) {
      |                                                  ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:126:27: warning: do not use 'else' after 'return' [readability-else-after-return]
  126 |                         } else {
      |                           ^~~~~~
  127 |                             // 文件读取完成
      |                             ~~~~~~~~~~~~~~~
  128 |                             fc.stop();
      |                             ~~~~~~~~~~
  129 |                             m_memory_manager->release_batch(std::move(batch));
      |                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
  130 |                             return nullptr;
      |                             ~~~~~~~~~~~~~~~
  131 |                         }
      |                         ~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:249:44: warning: narrowing conversion from '__int_type' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  249 |             final_stats.throughput_mbps = (total_reads_processed.load() * 150.0) / (total_duration / 1000.0) / (1024.0 * 1024.0);
      |                                            ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:249:75: warning: 150.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  249 |             final_stats.throughput_mbps = (total_reads_processed.load() * 150.0) / (total_duration / 1000.0) / (1024.0 * 1024.0);
      |                                                                           ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:249:102: warning: 1000.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  249 |             final_stats.throughput_mbps = (total_reads_processed.load() * 150.0) / (total_duration / 1000.0) / (1024.0 * 1024.0);
      |                                                                                                      ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:249:113: warning: 1024.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  249 |             final_stats.throughput_mbps = (total_reads_processed.load() * 150.0) / (total_duration / 1000.0) / (1024.0 * 1024.0);
      |                                                                                                                 ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:249:122: warning: 1024.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  249 |             final_stats.throughput_mbps = (total_reads_processed.load() * 150.0) / (total_duration / 1000.0) / (1024.0 * 1024.0);
      |                                                                                                                          ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:269:64: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  269 | TbbProcessingPipeline::PerformanceStats TbbProcessingPipeline::get_performance_stats() const {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                        ^
      | auto                                                                                         -> TbbProcessingPipeline::PerformanceStats
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:283:57: warning: narrowing conversion from 'size_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  283 |             static_cast<double>(pool_stats.hit_count) / (pool_stats.hit_count + pool_stats.miss_count) : 0.0;
      |                                                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:317:48: warning: 2 adjacent parameters of 'update_input_stats' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  317 | void TbbProcessingPipeline::update_input_stats(double duration_ms, size_t reads_count) {
      |                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:317:55: note: the first parameter in the range is 'duration_ms'
  317 | void TbbProcessingPipeline::update_input_stats(double duration_ms, size_t reads_count) {
      |                                                       ^~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:317:75: note: the last parameter in the range is 'reads_count'
  317 | void TbbProcessingPipeline::update_input_stats(double duration_ms, size_t reads_count) {
      |                                                                           ^~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:317:48: note: 
  317 | void TbbProcessingPipeline::update_input_stats(double duration_ms, size_t reads_count) {
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:317:68: note: 'double' and 'size_t' may be implicitly converted: 'double' -> 'size_t' (as 'unsigned long'), 'size_t' (as 'unsigned long') -> 'double'
  317 | void TbbProcessingPipeline::update_input_stats(double duration_ms, size_t reads_count) {
      |                                                                    ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:318:46: warning: statement should be inside braces [readability-braces-around-statements]
  318 |     if (!m_pipeline_config.enable_statistics) return;
      |                                              ^       
      |                                               {
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:326:53: warning: 2 adjacent parameters of 'update_processing_stats' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
  326 | void TbbProcessingPipeline::update_processing_stats(double duration_ms, size_t reads_count) {
      |                                                     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:326:60: note: the first parameter in the range is 'duration_ms'
  326 | void TbbProcessingPipeline::update_processing_stats(double duration_ms, size_t reads_count) {
      |                                                            ^~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:326:80: note: the last parameter in the range is 'reads_count'
  326 | void TbbProcessingPipeline::update_processing_stats(double duration_ms, size_t reads_count) {
      |                                                                                ^~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:326:53: note: 
  326 | void TbbProcessingPipeline::update_processing_stats(double duration_ms, size_t reads_count) {
      |                                                     ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:326:73: note: 'double' and 'size_t' may be implicitly converted: 'double' -> 'size_t' (as 'unsigned long'), 'size_t' (as 'unsigned long') -> 'double'
  326 | void TbbProcessingPipeline::update_processing_stats(double duration_ms, size_t reads_count) {
      |                                                                         ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:327:46: warning: statement should be inside braces [readability-braces-around-statements]
  327 |     if (!m_pipeline_config.enable_statistics) return;
      |                                              ^       
      |                                               {
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:336:46: warning: statement should be inside braces [readability-braces-around-statements]
  336 |     if (!m_pipeline_config.enable_statistics) return;
      |                                              ^       
      |                                               {
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:343:46: warning: statement should be inside braces [readability-braces-around-statements]
  343 |     if (!m_pipeline_config.enable_statistics) return;
      |                                              ^       
      |                                               {
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:351:45: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  351 |         m_stats.throughput_reads_per_sec = (m_stats.total_reads * 1000.0) / m_stats.total_time_ms;
      |                                             ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:351:67: warning: 1000.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  351 |         m_stats.throughput_reads_per_sec = (m_stats.total_reads * 1000.0) / m_stats.total_time_ms;
      |                                                                   ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:354:36: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  354 |         m_stats.throughput_mbps = (m_stats.total_reads * 150.0) / (m_stats.total_time_ms / 1000.0) / (1024.0 * 1024.0);
      |                                    ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:354:58: warning: 150.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  354 |         m_stats.throughput_mbps = (m_stats.total_reads * 150.0) / (m_stats.total_time_ms / 1000.0) / (1024.0 * 1024.0);
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:354:92: warning: 1000.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  354 |         m_stats.throughput_mbps = (m_stats.total_reads * 150.0) / (m_stats.total_time_ms / 1000.0) / (1024.0 * 1024.0);
      |                                                                                            ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:354:103: warning: 1024.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  354 |         m_stats.throughput_mbps = (m_stats.total_reads * 150.0) / (m_stats.total_time_ms / 1000.0) / (1024.0 * 1024.0);
      |                                                                                                       ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:354:112: warning: 1024.0 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  354 |         m_stats.throughput_mbps = (m_stats.total_reads * 150.0) / (m_stats.total_time_ms / 1000.0) / (1024.0 * 1024.0);
      |                                                                                                                ^
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:373:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  373 | std::unique_ptr<IProcessingPipeline> create_tbb_pipeline(
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      | auto
  374 |     const TbbProcessingPipeline::Config& config,
  375 |     std::shared_ptr<fq::memory::BatchMemoryManager> memory_manager
  376 | ) {
      |   -> std::unique_ptr<IProcessingPipeline>
/home/shane/dev/bgi/fastqtools/src/Processing/TbbProcessingPipeline.cpp:375:53: warning: the parameter 'memory_manager' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
  375 |     std::shared_ptr<fq::memory::BatchMemoryManager> memory_manager
      |                                                     ^
      |     const                                          &
/home/shane/dev/bgi/fastqtools/src/cli/commands/FilterCommand.cpp:26:20: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   26 | int FilterCommand::execute(int argc, char* argv[]) {
      | ~~~                ^
      | auto                                               -> int
/home/shane/dev/bgi/fastqtools/src/cli/commands/FilterCommand.cpp:26:38: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
   26 | int FilterCommand::execute(int argc, char* argv[]) {
      |                                      ^
/home/shane/dev/bgi/fastqtools/src/cli/commands/FilterCommand.cpp:33:40: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   33 |         std::cout << options.help() << std::endl;
      |                                        ^~~~~~~~~
      |                                        '\n'
/home/shane/dev/bgi/fastqtools/src/cli/commands/FilterCommand.cpp:39:9: warning: implicit conversion 'std::size_t' (aka 'unsigned long') -> 'bool' [readability-implicit-bool-conversion]
   39 |     if (result.count("help")) {
      |         ^                   
      |                              != 0u
/home/shane/dev/bgi/fastqtools/src/cli/commands/FilterCommand.cpp:40:40: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   40 |         std::cout << options.help() << std::endl;
      |                                        ^~~~~~~~~
      |                                        '\n'
/home/shane/dev/bgi/fastqtools/src/cli/commands/FilterCommand.cpp:61:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   61 | std::string FilterCommand::getName() const {
      | ~~~~~~~~~~~                ^
      | auto                                       -> std::string
/home/shane/dev/bgi/fastqtools/src/cli/commands/FilterCommand.cpp:65:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   65 | std::string FilterCommand::getDescription() const {
      | ~~~~~~~~~~~                ^
      | auto                                              -> std::string
/home/shane/dev/bgi/fastqtools/src/cli/commands/StatCommand.cpp:8:18: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    8 | int StatCommand::execute(int argc, char* argv[]) {
      | ~~~              ^
      | auto                                             -> int
/home/shane/dev/bgi/fastqtools/src/cli/commands/StatCommand.cpp:8:36: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
    8 | int StatCommand::execute(int argc, char* argv[]) {
      |                                    ^
/home/shane/dev/bgi/fastqtools/src/cli/commands/StatCommand.cpp:17:40: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   17 |         std::cout << options.help() << std::endl;
      |                                        ^~~~~~~~~
      |                                        '\n'
/home/shane/dev/bgi/fastqtools/src/cli/commands/StatCommand.cpp:23:9: warning: implicit conversion 'std::size_t' (aka 'unsigned long') -> 'bool' [readability-implicit-bool-conversion]
   23 |     if (result.count("help")) {
      |         ^                   
      |                              != 0u
/home/shane/dev/bgi/fastqtools/src/cli/commands/StatCommand.cpp:24:40: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
   24 |         std::cout << options.help() << std::endl;
      |                                        ^~~~~~~~~
      |                                        '\n'
/home/shane/dev/bgi/fastqtools/src/cli/commands/StatCommand.cpp:43:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   43 | std::string StatCommand::getName() const {
      | ~~~~~~~~~~~              ^
      | auto                                     -> std::string
/home/shane/dev/bgi/fastqtools/src/cli/commands/StatCommand.cpp:47:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   47 | std::string StatCommand::getDescription() const {
      | ~~~~~~~~~~~              ^
      | auto                                            -> std::string
/home/shane/dev/bgi/fastqtools/src/cli/main.cpp:18:5: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   18 | int main(int argc, char* argv[]) {
      | ~~~ ^
      | auto                             -> int
/home/shane/dev/bgi/fastqtools/src/cli/main.cpp:34:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
   34 |     auto it = commands.find(subcommand);
      |          ^
/home/shane/dev/bgi/fastqtools/src/interfaces/Factory.cpp:14:39: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   14 | std::unique_ptr<IStatisticCalculator> create_statistic_calculator(const StatisticOptions& options) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      | auto                                                                                               -> std::unique_ptr<IStatisticCalculator>
/home/shane/dev/bgi/fastqtools/src/interfaces/Factory.cpp:25:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   25 | std::unique_ptr<IProcessingPipeline> create_processing_pipeline() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      | auto                                                              -> std::unique_ptr<IProcessingPipeline>
/home/shane/dev/bgi/fastqtools/src/interfaces/Factory.cpp:32:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   32 | std::unique_ptr<IProcessingPipeline> create_tbb_processing_pipeline() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      | auto                                                                  -> std::unique_ptr<IProcessingPipeline>
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:12:34: warning: 2 adjacent parameters of 'FqInfoBatchPool' of similar type ('size_t') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   12 | FqInfoBatchPool::FqInfoBatchPool(size_t initial_size, size_t max_size)
      |                                  ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:12:41: note: the first parameter in the range is 'initial_size'
   12 | FqInfoBatchPool::FqInfoBatchPool(size_t initial_size, size_t max_size)
      |                                         ^~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:12:62: note: the last parameter in the range is 'max_size'
   12 | FqInfoBatchPool::FqInfoBatchPool(size_t initial_size, size_t max_size)
      |                                                              ^~~~~~~~
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:27:58: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   27 | std::unique_ptr<fq::fastq::FqInfoBatch> FqInfoBatchPool::acquire() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                  ^
      | auto                                                               -> std::unique_ptr<fq::fastq::FqInfoBatch>
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:71:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   71 | size_t FqInfoBatchPool::pool_size() const noexcept {
      | ~~~~~~                  ^
      | auto                                               -> size_t
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:76:25: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   76 | size_t FqInfoBatchPool::active_count() const noexcept {
      | ~~~~~~                  ^
      | auto                                                  -> size_t
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:118:47: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  118 | FqInfoBatchPool::MemoryStats FqInfoBatchPool::get_stats() const noexcept {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~                  ^
      | auto                                                                     -> FqInfoBatchPool::MemoryStats
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:121:12: warning: use designated initializer list to initialize 'MemoryStats' [modernize-use-designated-initializers]
  121 |     return {
      |            ^
  122 |         pool_size(),
      |         ~~~~~~~~~~~~
      |         .pool_size=
  123 |         active_count(),
      |         ~~~~~~~~~~~~~~~
      |         .active_count=
  124 |         m_total_allocated.load(),
      |         ~~~~~~~~~~~~~~~~~~~~~~~~~
      |         .total_allocated=
  125 |         m_total_freed.load(),
      |         ~~~~~~~~~~~~~~~~~~~~~
      |         .total_freed=
  126 |         m_hit_count.load(),
      |         ~~~~~~~~~~~~~~~~~~~
      |         .hit_count=
  127 |         m_miss_count.load()
      |         ~~~~~~~~~~~~~~~~~~~
      |         .miss_count=
  128 |     };
      |     ~
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.h:69:5: note: aggregate type is defined here
   69 |     struct MemoryStats {
      |     ^
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:140:58: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  140 | std::unique_ptr<fq::fastq::FqInfoBatch> FqInfoBatchPool::create_object() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                  ^
      | auto                                                                     -> std::unique_ptr<fq::fastq::FqInfoBatch>
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:140:58: warning: method 'create_object' can be made static [readability-convert-member-functions-to-static]
  140 | std::unique_ptr<fq::fastq::FqInfoBatch> FqInfoBatchPool::create_object() {
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:167:61: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  167 | std::unique_ptr<fq::fastq::FqInfoBatch> BatchMemoryManager::acquire_batch() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                     ^
      | auto                                                                        -> std::unique_ptr<fq::fastq::FqInfoBatch>
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:175:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  175 | size_t BatchMemoryManager::get_memory_usage() const noexcept {
      | ~~~~~~                     ^
      | auto                                                         -> size_t
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:181:45: warning: performing an implicit widening conversion to type 'const size_t' (aka 'const unsigned long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  181 |     constexpr size_t estimated_batch_size = 1024 * 1024; // 1MB per batch
      |                                             ^
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:181:45: note: make conversion explicit to silence this warning
    2 |     constexpr size_t estimated_batch_size = 1024 * 1024; // 1MB per batch
      |                                             ^~~~~~~~~~~
      |                                             static_cast<const size_t>( )
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:181:45: note: perform multiplication in a wider type
  181 |     constexpr size_t estimated_batch_size = 1024 * 1024; // 1MB per batch
      |                                             ^~~~
      |                                             static_cast<long>( )
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:183:65: warning: performing an implicit widening conversion to type 'size_t' (aka 'unsigned long') of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
  183 |     return (pool_size + active_count) * estimated_batch_size / (1024 * 1024); // MB
      |                                                                 ^
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:183:65: note: make conversion explicit to silence this warning
  183 |     return (pool_size + active_count) * estimated_batch_size / (1024 * 1024); // MB
      |                                                                 ^~~~~~~~~~~
      |                                                                 static_cast<size_t>( )
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:183:65: note: perform multiplication in a wider type
  183 |     return (pool_size + active_count) * estimated_batch_size / (1024 * 1024); // MB
      |                                                                 ^~~~
      |                                                                 static_cast<long>( )
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:183:65: warning: 1024 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  183 |     return (pool_size + active_count) * estimated_batch_size / (1024 * 1024); // MB
      |                                                                 ^
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:183:72: warning: 1024 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  183 |     return (pool_size + active_count) * estimated_batch_size / (1024 * 1024); // MB
      |                                                                        ^
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:186:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  186 | size_t BatchMemoryManager::get_active_objects() const noexcept {
      | ~~~~~~                     ^
      | auto                                                           -> size_t
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:190:50: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  190 | FqInfoBatchPool::MemoryStats BatchMemoryManager::get_batch_pool_stats() const {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~                     ^
      | auto                                                                          -> FqInfoBatchPool::MemoryStats
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:194:55: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  194 | const BatchMemoryManager::Config& BatchMemoryManager::get_config() const noexcept {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                     ^
      | auto                                                                              -> const BatchMemoryManager::Config&
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:226:83: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  226 |             std::cerr << "Error in memory manager shrink worker: " << e.what() << std::endl;
      |                                                                                   ^~~~~~~~~
      |                                                                                   '\n'
/home/shane/dev/bgi/fastqtools/src/memory/BatchMemoryManager.cpp:253:37: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
  253 | std::shared_ptr<BatchMemoryManager> global_memory_manager() {
      | ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~ ^
      | auto                                                        -> std::shared_ptr<BatchMemoryManager>
/home/shane/dev/bgi/fastqtools/src/modules/common/common.cpp:17:10: warning: variable name 'ms' is too short, expected at least 3 characters [readability-identifier-length]
   17 |     auto ms = std::chrono::duration_cast<std::chrono::milliseconds>(elapsed).count();
      |          ^
/home/shane/dev/bgi/fastqtools/src/modules/common/common.cpp:39:41: warning: statement should be inside braces [readability-braces-around-statements]
   39 |     if (start == std::string_view::npos)
      |                                         ^
      |                                          {
   40 |         return "";
      |                   
/home/shane/dev/bgi/fastqtools/src/modules/common/common.cpp:46:23: warning: statement should be inside braces [readability-braces-around-statements]
   46 |     if (parts.empty())
      |                       ^
      |                        {
   47 |         return "";
      |                   
/home/shane/dev/bgi/fastqtools/src/modules/common/common.cpp:71:14: warning: method 'get_level_string' can be made static [readability-convert-member-functions-to-static]
   71 | auto Logger::get_level_string(Level level) -> std::string_view {
      |              ^
/home/shane/dev/bgi/fastqtools/src/modules/common/common.cpp:88:14: warning: method 'get_current_time' can be made static [readability-convert-member-functions-to-static]
   88 | auto Logger::get_current_time() -> std::string {
      |              ^
/home/shane/dev/bgi/fastqtools/src/modules/common/common.cpp:98:86: warning: 1900 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   98 |     return fmt::format("{:04d}-{:02d}-{:02d} {:02d}:{:02d}:{:02d}", tm_buf.tm_year + 1900, tm_buf.tm_mon + 1,
      |                                                                                      ^
/home/shane/dev/bgi/fastqtools/src/modules/common/common.cpp:126:15: warning: do not use 'std::endl' with streams; use '\n' instead [performance-avoid-endl]
  126 |         )" << std::endl;
      |               ^~~~~~~~~
      |               '\n'
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:16:15: warning: redundant 'environ' declaration [readability-redundant-declaration]
   16 | extern char** environ;
      | ~~~~~~~~~~~~~~^~~~~~~~
/usr/include/unistd.h:566:15: note: previously declared here
  566 | extern char **environ;
      |               ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:31:46: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
   31 | void Configuration::load_from_args(int argc, char* argv[]) {
      |                                              ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:68:17: warning: use a ranges version of this algorithm [modernize-use-ranges]
   68 |                 std::transform(config_key.begin(), config_key.end(), config_key.begin(), ::tolower);
      |                 ^~~~~~~~~~~~~~ ~~~~~~~~~~~~~~~~~~  ~~~~~~~~~~~~~~~~
      |                 std::ranges::transform config_key
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:86:39: warning: 256 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   86 |         if (threads <= 0 || threads > 256) {
      |                                       ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:91:63: warning: 1024 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   91 |         auto memory = get_or<std::int64_t>("memory_limit_mb", 1024);
      |                                                               ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:92:37: warning: performing an implicit widening conversion to type 'long' of a multiplication performed in type 'int' [bugprone-implicit-widening-of-multiplication-result]
   92 |         if (memory <= 0 || memory > 1024 * 1024) {
      |                                     ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:92:37: note: make conversion explicit to silence this warning
    5 |         if (memory <= 0 || memory > 1024 * 1024) {
      |                                     ^~~~~~~~~~~
      |                                     static_cast<long>( )
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:92:37: note: perform multiplication in a wider type
   92 |         if (memory <= 0 || memory > 1024 * 1024) {
      |                                     ^~~~
      |                                     static_cast<long>( )
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:92:37: warning: 1024 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   92 |         if (memory <= 0 || memory > 1024 * 1024) {
      |                                     ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:92:44: warning: 1024 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   92 |         if (memory <= 0 || memory > 1024 * 1024) {
      |                                            ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:103:32: warning: parameter name 'v' is too short, expected at least 3 characters [readability-identifier-length]
  103 |             [&out](const auto& v) {
      |                                ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:116:21: warning: method 'validate_key' can be made static [readability-convert-member-functions-to-static]
  116 | void Configuration::validate_key(std::string_view key) const {
      |                     ^                                  ~~~~~
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:120:15: warning: variable name 'c' is too short, expected at least 3 characters [readability-identifier-length]
  120 |     for (char c : key) {
      |               ^
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:121:14: warning: implicit conversion 'int' -> 'bool' [readability-implicit-bool-conversion]
  121 |         if (!std::isalnum(c) && c != '_' && c != '-') {
      |             ~^
      |             (                == 0)
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:137:29: warning: statement should be inside braces [readability-braces-around-statements]
  137 |         if (trimmed.empty())
      |                             ^
      |                              {
  138 |             continue;
      |                      
/home/shane/dev/bgi/fastqtools/src/modules/config/config.cpp:173:10: warning: variable name 'it' is too short, expected at least 3 characters [readability-identifier-length]
  173 |     auto it = m_short_to_long.find(short_name);
      |          ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:6:39: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    6 | FqStatisticResult& FqStatisticResult::operator+=(const FqStatisticResult& other) {
      | ~~~~~~~~~~~~~~~~~~                    ^
      | auto                                                                             -> FqStatisticResult&
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:28:15: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   28 | static double calErrPerPos(const std::vector<uint64_t>& n_pos_qual, uint64_t n_read) {
      |        ~~~~~~ ^
      |        auto                                                                          -> double
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:29:21: warning: statement should be inside braces [readability-braces-around-statements]
   29 |     if (n_read == 0)
      |                     ^
      |                      {
   30 |         return 0.0;
      |                    
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:33:24: warning: narrowing conversion from 'value_type' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
   33 |         err_per_pos += n_pos_qual[i] * pow(10, -0.1 * i);
      |                        ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:33:44: warning: 10 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   33 |         err_per_pos += n_pos_qual[i] * pow(10, -0.1 * i);
      |                                            ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:33:49: warning: 0.1 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   33 |         err_per_pos += n_pos_qual[i] * pow(10, -0.1 * i);
      |                                                 ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:35:26: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
   35 |     return err_per_pos / n_read;
      |                          ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:38:26: warning: pass by value and use std::move [modernize-pass-by-value]
   20 | FqStatistic::FqStatistic(const StatisticOptions& options) : m_options(options) {
      |                          ^~~~~~~~~~~~~~~~~~~~~~~                             
      |                          StatisticOptions                             std::move( )
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:65:47: warning: parameter name 'fc' is too short, expected at least 3 characters [readability-identifier-length]
   65 |             [this, reader](tbb::flow_control& fc) -> std::shared_ptr<fq::fastq::FqInfoBatch> {
      |                                               ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:67:42: warning: narrowing conversion from 'uint32_t' (aka 'unsigned int') to signed type 'int' is implementation-defined [bugprone-narrowing-conversions]
   67 |                 if (reader->read(*batch, m_options.batch_size)) {
      |                                          ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:69:19: warning: do not use 'else' after 'return' [readability-else-after-return]
   69 |                 } else {
      |                   ^~~~~~
   70 |                     // No more batches, stop the pipeline
      |                     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
   71 |                     fc.stop();
      |                     ~~~~~~~~~~
   72 |                     return nullptr;
      |                     ~~~~~~~~~~~~~~~
   73 |                 }
      |                 ~
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:79:64: warning: the parameter 'batch' is copied for each invocation but only used as a const reference; consider making it a const reference [performance-unnecessary-value-param]
   79 |                 [this](std::shared_ptr<fq::fastq::FqInfoBatch> batch) -> FqStatisticResult {
      |                                                                ^
      |                        const                                  &
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:80:32: warning: statement should be inside braces [readability-braces-around-statements]
   80 |                     if (!batch)
      |                                ^
      |                                 {
   81 |                         return FqStatisticResult();
      |                                                    
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:81:32: warning: avoid repeating the return type from the declaration; use a braced initializer list instead [modernize-return-braced-init-list]
   81 |                         return FqStatisticResult();
      |                                ^~~~~~~~~~~~~~~~~~~
      |                                {}
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:115:33: warning: redundant explicit casting to the same type 'int' as the sub-expression, remove this casting [readability-redundant-casting]
  115 |     writer << "#PhredQual\t" << static_cast<int>(attrib.q_score_type == fq::fastq::QScoreType::Sanger ? 33 : 64)
      |                                 ^~~~~~~~~~~~~~~~~                                                              ~
      |                                 (                                                                              )
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:115:105: warning: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  115 |     writer << "#PhredQual\t" << static_cast<int>(attrib.q_score_type == fq::fastq::QScoreType::Sanger ? 33 : 64)
      |                                                                                                         ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:115:110: warning: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  115 |     writer << "#PhredQual\t" << static_cast<int>(attrib.q_score_type == fq::fastq::QScoreType::Sanger ? 33 : 64)
      |                                                                                                              ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:121:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  121 |     uint64_t n_q20 = 0, n_q30 = 0;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:122:5: warning: multiple declarations in a single statement reduces readability [readability-isolate-declaration]
  122 |     uint64_t n_a = 0, n_c = 0, n_g = 0, n_t = 0, n_n = 0;
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:125:22: warning: 20 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  125 |         for (int j = 20; j < fq::fastq::MAX_QUAL; ++j)
      |                      ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:125:55: warning: statement should be inside braces [readability-braces-around-statements]
  125 |         for (int j = 20; j < fq::fastq::MAX_QUAL; ++j)
      |                                                       ^
      |                                                        {
  126 |             n_q20 += result.n_pos_qual[i][j];
      |                                              
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:127:22: warning: 30 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
  127 |         for (int j = 30; j < fq::fastq::MAX_QUAL; ++j)
      |                      ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:127:55: warning: statement should be inside braces [readability-braces-around-statements]
  127 |         for (int j = 30; j < fq::fastq::MAX_QUAL; ++j)
      |                                                       ^
      |                                                        {
  128 |             n_q30 += result.n_pos_qual[i][j];
      |                                              
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:136:58: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  136 |     writer << "#Q20(>=20)\t" << n_q20 << "\t" << 100.0 * n_q20 / n_base << "%\n";
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:136:66: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  136 |     writer << "#Q20(>=20)\t" << n_q20 << "\t" << 100.0 * n_q20 / n_base << "%\n";
      |                                                                  ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:137:58: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  137 |     writer << "#Q30(>=30)\t" << n_q30 << "\t" << 100.0 * n_q30 / n_base << "%\n";
      |                                                          ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:137:66: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  137 |     writer << "#Q30(>=30)\t" << n_q30 << "\t" << 100.0 * n_q30 / n_base << "%\n";
      |                                                                  ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:138:48: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  138 |     writer << "#A\t" << n_a << "\t" << 100.0 * n_a / n_base << "%\n";
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:138:54: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  138 |     writer << "#A\t" << n_a << "\t" << 100.0 * n_a / n_base << "%\n";
      |                                                      ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:139:48: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  139 |     writer << "#C\t" << n_c << "\t" << 100.0 * n_c / n_base << "%\n";
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:139:54: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  139 |     writer << "#C\t" << n_c << "\t" << 100.0 * n_c / n_base << "%\n";
      |                                                      ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:140:48: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  140 |     writer << "#G\t" << n_g << "\t" << 100.0 * n_g / n_base << "%\n";
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:140:54: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  140 |     writer << "#G\t" << n_g << "\t" << 100.0 * n_g / n_base << "%\n";
      |                                                      ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:141:48: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  141 |     writer << "#T\t" << n_t << "\t" << 100.0 * n_t / n_base << "%\n";
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:141:54: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  141 |     writer << "#T\t" << n_t << "\t" << 100.0 * n_t / n_base << "%\n";
      |                                                      ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:142:48: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  142 |     writer << "#N\t" << n_n << "\t" << 100.0 * n_n / n_base << "%\n";
      |                                                ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:142:54: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  142 |     writer << "#N\t" << n_n << "\t" << 100.0 * n_n / n_base << "%\n";
      |                                                      ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:143:55: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  143 |     writer << "#GC\t" << n_g + n_c << "\t" << 100.0 * (n_g + n_c) / n_base << "%\n";
      |                                                       ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:143:69: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  143 |     writer << "#GC\t" << n_g + n_c << "\t" << 100.0 * (n_g + n_c) / n_base << "%\n";
      |                                                                     ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatistic.cpp:155:19: warning: narrowing conversion from 'uint64_t' (aka 'unsigned long') to 'double' [bugprone-narrowing-conversions]
  155 |         writer << sum_qual / (double)result.n_read << "\t";
      |                   ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatisticWorker.cpp:7:38: warning: pass by value and use std::move [modernize-pass-by-value]
    2 | #include "stats/FqStatistic.h"
    3 | #include "Core/Core.h"
    4 | 
    5 | namespace fq::statistic {
    6 | 
    7 | FqStatisticWorker::FqStatisticWorker(std::shared_ptr<fq::fastq::FastQInfer> fq_infer)
      |                                      ^
    8 |     : m_fq_infer(fq_infer) {
      |                          
      |                  std::move( )
/home/shane/dev/bgi/fastqtools/src/stats/FqStatisticWorker.cpp:8:18: warning: parameter 'fq_infer' is passed by value and only copied once; consider moving it to avoid unnecessary copies [performance-unnecessary-value-param]
    2 | #include "stats/FqStatistic.h"
    3 | #include "Core/Core.h"
    4 | 
    5 | namespace fq::statistic {
    6 | 
    7 | FqStatisticWorker::FqStatisticWorker(std::shared_ptr<fq::fastq::FastQInfer> fq_infer)
    8 |     : m_fq_infer(fq_infer) {
      |                  ^       
      |                  std::move( )
/home/shane/dev/bgi/fastqtools/src/stats/FqStatisticWorker.cpp:10:108: warning: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   10 |         m_qual_offset = m_fq_infer->getFqFileAttribution().q_score_type == fq::fastq::QScoreType::Sanger ? 33 : 64;
      |                                                                                                            ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatisticWorker.cpp:10:113: warning: 64 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   10 |         m_qual_offset = m_fq_infer->getFqFileAttribution().q_score_type == fq::fastq::QScoreType::Sanger ? 33 : 64;
      |                                                                                                                 ^
/home/shane/dev/bgi/fastqtools/src/stats/FqStatisticWorker.cpp:14:39: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   14 | IStatistic::Result FqStatisticWorker::stat(const Batch& batch) {
      | ~~~~~~~~~~~~~~~~~~                    ^
      | auto                                                           -> IStatistic::Result
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:1:10: error: 'gtest/gtest.h' file not found [clang-diagnostic-error]
    1 | #include <gtest/gtest.h>
      |          ^~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:14:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   14 | TEST_F(TimerTest, BasicTiming) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:14:17: warning: all parameters should be named in a function [readability-named-parameter]
   14 | TEST_F(TimerTest, BasicTiming) {
      |                 ^            
      |                  /*unused*/   /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:24:35: warning: 90 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   24 |     EXPECT_GT(elapsed_ms.count(), 90);
      |                                   ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:25:35: warning: 200 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   25 |     EXPECT_LT(elapsed_ms.count(), 200);  // Allow for system scheduling delays
      |                                   ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:29:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   29 | TEST_F(TimerTest, NamedTimer) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:29:17: warning: all parameters should be named in a function [readability-named-parameter]
   29 | TEST_F(TimerTest, NamedTimer) {
      |                 ^           
      |                  /*unused*/  /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:40:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   40 | TEST_F(TimerTest, SequentialTiming) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:40:17: warning: all parameters should be named in a function [readability-named-parameter]
   40 | TEST_F(TimerTest, SequentialTiming) {
      |                 ^                 
      |                  /*unused*/        /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:56:34: warning: 45 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   56 |     EXPECT_GT(first_duration_ms, 45);
      |                                  ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:57:34: warning: 100 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   57 |     EXPECT_LT(first_duration_ms, 100);
      |                                  ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:59:35: warning: 65 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   59 |     EXPECT_GT(second_duration_ms, 65);
      |                                   ^
/home/shane/dev/bgi/fastqtools/tests/unit/common/test_timer.cpp:60:35: warning: 120 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   60 |     EXPECT_LT(second_duration_ms, 120);
      |                                   ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:1:10: error: 'gtest/gtest.h' file not found [clang-diagnostic-error]
    1 | #include <gtest/gtest.h>
      |          ^~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:12:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   12 | TEST(CommonModuleTest, Timer_BasicFunctionality) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:12:22: warning: all parameters should be named in a function [readability-named-parameter]
   12 | TEST(CommonModuleTest, Timer_BasicFunctionality) {
      |                      ^                         
      |                       /*unused*/                /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:19:27: warning: 90 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   19 |     EXPECT_GE(elapsed_ms, 90);
      |                           ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:20:27: warning: 200 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   20 |     EXPECT_LE(elapsed_ms, 200);
      |                           ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:27:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   27 | TEST(CommonModuleTest, StringUtils_SplitBasic) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:27:22: warning: all parameters should be named in a function [readability-named-parameter]
   27 | TEST(CommonModuleTest, StringUtils_SplitBasic) {
      |                      ^                       
      |                       /*unused*/              /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:33:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   33 | TEST(CommonModuleTest, StringUtils_SplitWithEmptyParts) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:33:22: warning: all parameters should be named in a function [readability-named-parameter]
   33 | TEST(CommonModuleTest, StringUtils_SplitWithEmptyParts) {
      |                      ^                                
      |                       /*unused*/                       /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:41:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   41 | TEST(CommonModuleTest, StringUtils_TrimBasic) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:41:22: warning: all parameters should be named in a function [readability-named-parameter]
   41 | TEST(CommonModuleTest, StringUtils_TrimBasic) {
      |                      ^                      
      |                       /*unused*/             /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:47:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   47 | TEST(CommonModuleTest, StringUtils_JoinBasic) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:47:22: warning: all parameters should be named in a function [readability-named-parameter]
   47 | TEST(CommonModuleTest, StringUtils_JoinBasic) {
      |                      ^                      
      |                       /*unused*/             /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:53:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   53 | TEST(CommonModuleTest, Logger_SingletonInstance) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:53:22: warning: all parameters should be named in a function [readability-named-parameter]
   53 | TEST(CommonModuleTest, Logger_SingletonInstance) {
      |                      ^                         
      |                       /*unused*/                /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:59:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   59 | TEST(CommonModuleTest, Logger_LogLevelChange) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:59:22: warning: all parameters should be named in a function [readability-named-parameter]
   59 | TEST(CommonModuleTest, Logger_LogLevelChange) {
      |                      ^                      
      |                       /*unused*/             /*unused*/
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:67:1: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   67 | TEST(CommonModuleTest, SoftwareInfo_PrintFunctions) {
      | ^
/home/shane/dev/bgi/fastqtools/tests/unit/modules/common/test_common.cpp:67:22: warning: all parameters should be named in a function [readability-named-parameter]
   67 | TEST(CommonModuleTest, SoftwareInfo_PrintFunctions) {
      |                      ^                            
      |                       /*unused*/                   /*unused*/
/home/shane/dev/bgi/fastqtools/tests/utils/fixture_loader.cpp:7:28: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
    7 | std::string FixtureLoader::loadTextFile(const std::filesystem::path& path) {
      | ~~~~~~~~~~~                ^
      | auto                                                                       -> std::string
/home/shane/dev/bgi/fastqtools/tests/utils/fixture_loader.cpp:18:41: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   18 | std::vector<std::string> FixtureLoader::loadLines(const std::filesystem::path& path) {
      | ~~~~~~~~~~~~~~~~~~~~~~~~                ^
      | auto                                                                                 -> std::vector<std::string>
/home/shane/dev/bgi/fastqtools/tests/utils/fixture_loader.cpp:33:38: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   33 | std::filesystem::path FixtureLoader::getFixturePath(const std::string& filename) {
      | ~~~~~~~~~~~~~~~~~~~~~                ^
      | auto                                                                             -> std::filesystem::path
/home/shane/dev/bgi/fastqtools/tests/utils/fixture_loader.cpp:45:21: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   45 | bool FixtureLoader::fixtureExists(const std::string& filename) {
      | ~~~~                ^
      | auto                                                           -> bool
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:10:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   10 | std::filesystem::path TestHelpers::createTempFile(
      |                                    ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:10:36: warning: method 'createTempFile' can be made static [readability-convert-member-functions-to-static]
   10 | std::filesystem::path TestHelpers::createTempFile(
      |                                    ^
      | static 
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:11:5: warning: 2 adjacent parameters of 'createTempFile' of similar type ('const int &') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   11 |     const std::string& content, 
      |     ^~~~~~~~~~~~~~~~~~~~~~~~~~~
   12 |     const std::string& suffix
      |     ~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:11:24: note: the first parameter in the range is 'content'
   11 |     const std::string& content, 
      |                        ^~~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:12:24: note: the last parameter in the range is 'suffix'
   12 |     const std::string& suffix
      |                        ^~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:25:36: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   25 | std::filesystem::path TestHelpers::createTempDir() {
      |                                    ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:25:36: warning: method 'createTempDir' can be made static [readability-convert-member-functions-to-static]
   25 | std::filesystem::path TestHelpers::createTempDir() {
      |                                    ^
      | static 
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:34:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   34 | std::string TestHelpers::generateFastQRecords(size_t count, size_t read_length) {
      |                          ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:34:26: warning: method 'generateFastQRecords' can be made static [readability-convert-member-functions-to-static]
   34 | std::string TestHelpers::generateFastQRecords(size_t count, size_t read_length) {
      |                          ^
      | static 
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:34:47: warning: 2 adjacent parameters of 'generateFastQRecords' of similar type ('size_t') are easily swapped by mistake [bugprone-easily-swappable-parameters]
   34 | std::string TestHelpers::generateFastQRecords(size_t count, size_t read_length) {
      |                                               ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:34:54: note: the first parameter in the range is 'count'
   34 | std::string TestHelpers::generateFastQRecords(size_t count, size_t read_length) {
      |                                                      ^~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:34:68: note: the last parameter in the range is 'read_length'
   34 | std::string TestHelpers::generateFastQRecords(size_t count, size_t read_length) {
      |                                                                    ^~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:47:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   47 | std::string TestHelpers::generateRandomDNA(size_t length) {
      |                          ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:47:26: warning: method 'generateRandomDNA' can be made static [readability-convert-member-functions-to-static]
   47 | std::string TestHelpers::generateRandomDNA(size_t length) {
      |                          ^
      | static 
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:48:18: warning: do not declare C-style arrays, use std::array<> instead [modernize-avoid-c-arrays]
   48 |     static const char bases[] = "ATGC";
      |                  ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:49:31: warning: variable name 'rd' is too short, expected at least 3 characters [readability-identifier-length]
   49 |     static std::random_device rd;
      |                               ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:50:29: warning: narrowing conversion from 'result_type' (aka 'unsigned int') to signed type 'std::mt19937' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
   50 |     static std::mt19937 gen(rd());
      |                             ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:63:26: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   63 | std::string TestHelpers::generateRandomQuality(size_t length, int min_quality, int max_quality) {
      |                          ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:63:26: warning: method 'generateRandomQuality' can be made static [readability-convert-member-functions-to-static]
   63 | std::string TestHelpers::generateRandomQuality(size_t length, int min_quality, int max_quality) {
      |                          ^
      | static 
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:63:48: warning: 2 adjacent parameters of 'generateRandomQuality' of convertible types are easily swapped by mistake [bugprone-easily-swappable-parameters]
   63 | std::string TestHelpers::generateRandomQuality(size_t length, int min_quality, int max_quality) {
      |                                                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:63:55: note: the first parameter in the range is 'length'
   63 | std::string TestHelpers::generateRandomQuality(size_t length, int min_quality, int max_quality) {
      |                                                       ^~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:63:67: note: the last parameter in the range is 'min_quality'
   63 | std::string TestHelpers::generateRandomQuality(size_t length, int min_quality, int max_quality) {
      |                                                                   ^~~~~~~~~~~
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:63:48: note: 
   63 | std::string TestHelpers::generateRandomQuality(size_t length, int min_quality, int max_quality) {
      |                                                ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:63:63: note: 'size_t' and 'int' may be implicitly converted: 'size_t' (as 'unsigned long') -> 'int', 'int' -> 'size_t' (as 'unsigned long')
   63 | std::string TestHelpers::generateRandomQuality(size_t length, int min_quality, int max_quality) {
      |                                                               ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:64:31: warning: variable name 'rd' is too short, expected at least 3 characters [readability-identifier-length]
   64 |     static std::random_device rd;
      |                               ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:65:29: warning: narrowing conversion from 'result_type' (aka 'unsigned int') to signed type 'std::mt19937' (aka 'int') is implementation-defined [bugprone-narrowing-conversions]
   65 |     static std::mt19937 gen(rd());
      |                             ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:72:49: warning: 33 is a magic number; consider replacing it with a named constant [readability-magic-numbers]
   72 |         quality += static_cast<char>(dis(gen) + 33); // Phred+33 encoding
      |                                                 ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:78:19: warning: use a trailing return type for this function [modernize-use-trailing-return-type]
   78 | bool TestHelpers::compareFiles(
      | ~~~~              ^
      | auto
   79 |     const std::filesystem::path& file1,
   80 |     const std::filesystem::path& file2
   81 | ) {
      |   -> bool
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:78:19: warning: method 'compareFiles' can be made static [readability-convert-member-functions-to-static]
   78 | bool TestHelpers::compareFiles(
      |                   ^
      | static 
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.cpp:113:22: warning: method 'TearDown' can be made static [readability-convert-member-functions-to-static]
  113 | void FastQToolsTest::TearDown() {
      |                      ^
/home/shane/dev/bgi/fastqtools/tests/utils/test_helpers.h:3:10: error: 'gtest/gtest.h' file not found [clang-diagnostic-error]
    3 | #include <gtest/gtest.h>
      |          ^~~~~~~~~~~~~~~
